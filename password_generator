import tkinter as tk
import random
import string

class PasswordGenerator:
    def __init__(self, master):
        self.master = master
        master.title("Password Generator")
        master.geometry("400x380")
        master.configure(bg="#2c3e50")

        self.title_label = tk.Label(master, text="Password Generator", font=("Helvetica", 18, "bold"), bg="#2c3e50", fg="#ecf0f1")
        self.title_label.pack(pady=20)

        self.frame = tk.Frame(master, bg="#34495e", bd=2, relief=tk.RAISED)
        self.frame.pack(pady=10, padx=10)

        self.length_label = tk.Label(self.frame, text="Password Length:", bg="#34495e", fg="#ecf0f1")
        self.length_label.grid(row=0, column=0, padx=5, pady=5)

        self.length_entry = tk.Entry(self.frame, width=5, font=("Helvetica", 12),bg="#2c3e50", fg="#ecf0f1")
        self.length_entry.grid(row=0, column=1, padx=5, pady=5)

        self.uppercase_var = tk.BooleanVar()
        self.uppercase_check = tk.Checkbutton(self.frame, text="Include Uppercase Letters", variable=self.uppercase_var, bg="#34495e", fg="#ecf0f1", selectcolor="#2c3e50")
        self.uppercase_check.grid(row=1, columnspan=2, sticky="w")

        self.lowercase_var = tk.BooleanVar()
        self.lowercase_check = tk.Checkbutton(self.frame, text="Include Lowercase Letters", variable=self.lowercase_var, bg="#34495e", fg="#ecf0f1", selectcolor="#2c3e50")
        self.lowercase_check.grid(row=2, columnspan=2, sticky="w")

        self.digits_var = tk.BooleanVar()
        self.digits_check = tk.Checkbutton(self.frame, text="Include Digits", variable=self.digits_var, bg="#34495e", fg="#ecf0f1", selectcolor="#2c3e50")
        self.digits_check.grid(row=3, columnspan=2, sticky="w")

        self.special_var = tk.BooleanVar()
        self.special_check = tk.Checkbutton(self.frame, text="Include Special Characters", variable=self.special_var, bg="#34495e", fg="#ecf0f1", selectcolor="#2c3e50")
        self.special_check.grid(row=4, columnspan=2, sticky="w")

        
        self.generate_button = tk.Button(master, text="Generate Password", command=self.generate_password, bg="#1abc9c", fg="white", font=("Helvetica", 12, "bold"))
        self.generate_button.pack(pady=20)


        self.password_label = tk.Label(master, text="Generated Password:", bg="#2c3e50", fg="#ecf0f1")
        self.password_label.pack(pady=5)

        self.password_entry = tk.Entry(master, width=30, font=("Helvetica", 12), bg="#2c3e50", fg="#ecf0f1")
        self.password_entry.pack(pady=5)

    def generate_password(self):
        length = self.length_entry.get()
        if not length.isdigit() or int(length) <= 0:
            self.password_entry.delete(0, tk.END)
            self.password_entry.insert(0, "Enter a valid length.")
            return

        length = int(length)
        characters = ""

        if self.uppercase_var.get():
            characters += string.ascii_uppercase
        if self.lowercase_var.get():
            characters += string.ascii_lowercase
        if self.digits_var.get():
            characters += string.digits
        if self.special_var.get():
            characters += string.punctuation

        if characters == "":
            self.password_entry.delete(0, tk.END)
            self.password_entry.insert(0, "Please select at least one character set.")
            return

        password = ''.join(random.choice(characters) for _ in range(length))
        self.password_entry.delete(0, tk.END)
        self.password_entry.insert(0, password)

if __name__ == "__main__":
    root = tk.Tk()
    password_generator = PasswordGenerator(root)
    root.mainloop()
